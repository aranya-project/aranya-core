[package]
name = "policy-vm"
version = "0.1.0"
authors.workspace = true
edition.workspace = true
license.workspace = true
publish.workspace = true
rust-version.workspace = true

[lib]

[features]
default = []

# Enable `FfiModule` derivation.
derive = []

# Enable `std`.
std = [
	"crypto/std",
	"policy-ast/std",
]

#
# Nightly features
#

# Makes the various "error" types implement `core::error::Error`.
# If `std` is enabled, this is a no-op.
error_in_core = [
	"crypto/error_in_core",
	"policy-ast/error_in_core",
]

[dependencies]
cfg-if = { workspace = true, default-features = false }
crypto = { path = "../crypto", default-features = false }
policy-ast = { path = "../policy-ast" }
policy-derive = { path = "../policy-derive" }
serde = { workspace = true, default-features = false, features = ["derive", "alloc"] }

[dev-dependencies]
anyhow = { version = "1" }
crypto = { path = "../crypto", default-features = false, features = ["alloc"] }
policy-lang = { path = "../policy-lang" }
policy-vm = { path = ".", features = ["derive"] }

[[test]]
name = "tests"
path = "tests/lib.rs"

[package.metadata.docs.rs]
all-features = true

[package.metadata.cargo-all-features]
denylist = [
	"error_in_core",
]
