name: "Setup build tools"
description: "Action for setting up build tools"
inputs:
  go-version:
    description: "Go version"
    required: true
    default: "stable"
  target:
    description: "OS-arch target being compiled for (e.g., linux-arm64)"
runs:
  using: "composite"
  steps:
      # There is a bug in the version of GCC that ships with our
      # arm64 runners that prevents BoringSSL from compiling. So,
      # use Clang instead.
      #
      # TODO(eric): Reassess whether we still need these.
    - name: Install arm64/amd64 system dependencies
      run: |
        set -x

        lsb_release -a

        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends \
          build-essential \
          clang-14 \
          clang-tools-14 \
          cmake \
          libc++-14-dev \
          libc++abi-14-dev \
          libclang-14-dev \
          libclang1-14 \
          llvm-14 \
          llvm-14-dev \
          lld-14 \
          ninja-build \
          pkg-config

          echo "CC=$(which clang-14)" >> $GITHUB_ENV
          echo "CXX=$(which clang-14)" >> $GITHUB_ENV
          echo "LD=$(which lld-14)" >> $GITHUB_ENV
      shell: bash

    #
    # Set up Rust
    #
    - name: Install Rust
      run: |
        cat<<EOF>>rustup.sh.sha256
        32a680a84cf76014915b3f8aa44e3e40731f3af92cd45eb0fcc6264fd257c428  rustup.sh
        EOF
        wget 'https://sh.rustup.rs' -O rustup.sh
        shasum -c rustup.sh.sha256
        chmod +x ./rustup.sh
        ./rustup.sh -y --default-toolchain none
        source "$HOME/.cargo/env"
        echo "${HOME}/.cargo/bin" >> $GITHUB_PATH
      shell: bash
    - name: cargo version
      shell: bash
      run: |
        file cargo
        cargo --version --verbose

    - name: Install sccache
      uses: aranya-project/sccache-action@main
      with:
        version: "v0.8.2"

    - name: Configure sccache
      run: |
        echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
        echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
        echo "CARGO_INCREMENTAL=0" >> $GITHUB_ENV
      shell: bash

    - name: Install cargo-make
      run: cargo install --version '0.37.23' --locked cargo-make
      shell: bash
