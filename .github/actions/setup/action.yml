name: 'Setup build tools'
description: 'Action for setting up build tools'
inputs:
  gh-token:
    description: 'github.com Access Token'
    required: true
  ghe-token:
    description: 'git.spideroak-inc.com Access Token'
    required: true
  go-version:
    description: 'Go version'
    required: true
    default: 'stable'
  os:
    description: 'OS being used (e.g., macos-latest)'
    required: true
  target:
    description: 'OS-arch target being compiled for (e.g., linux-arm64)'
runs:
  using: "composite"
  steps:
    - name: Set up git
      run: |
        git config --global url."https://${{ inputs.ghe-token }}@git.spideroak-inc.com/".insteadOf https://git.spideroak-inc.com/
        echo "CARGO_NET_GIT_FETCH_WITH_CLI=true" >> $GITHUB_ENV
      shell: bash

      # There is a bug in the version of GCC that ships with our
      # arm64 runners that prevents BoringSSL from compiling. So,
      # use Clang instead.
    - name: Install arm64/amd64 system dependencies
      run: |
        set -x

        lsb_release -a

        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends \
          build-essential \
          clang-12 \
          clang-tools-12 \
          cmake \
          libunwind-dev \
          libc++-12-dev \
          libc++abi-12-dev \
          libclang-12-dev \
          libclang1-12 \
          llvm-12 \
          llvm-12-dev \
          lld-12 \
          ninja-build \
          pkg-config

          echo "CC=$(which clang-12)" >> $GITHUB_ENV
          echo "CXX=$GITHUB_WORKSPACE/clang++12" >> $GITHUB_ENV
          echo "LD=$(which lld-12)" >> $GITHUB_ENV
      shell: bash
      if: ${{ inputs.os == 'self-hosted-linux-arm64' || inputs.os == 'self-hosted-linux-amd64' }}

    #
    # Set up Rust
    #
    - name: Install Rust
      run: |
        cat<<EOF>>rustup.sh.sha256
        be3535b3033ff5e0ecc4d589a35d3656f681332f860c5fd6684859970165ddcc  rustup.sh
        EOF
        wget 'https://sh.rustup.rs' -O rustup.sh
        shasum -c rustup.sh.sha256
        chmod +x ./rustup.sh
        ./rustup.sh -y --default-toolchain none
        source "$HOME/.cargo/env"
        echo "${HOME}/.cargo/bin" >> $GITHUB_PATH
        rustup \
          toolchain \
          install stable \
          --profile minimal \
          --allow-downgrade \
          --component cargo \
          --component clippy \
          --component rustfmt
      shell: bash
    # Various runners have a 64-bit kernel with a 32-bit userspace.
    # Setting rustup's default host to armv7 allows using the 32-bit executables.
    - name: Set rustup's host
      run: |
        rustup set default-host armv7-unknown-linux-gnueabihf
        rustup show active-toolchain
      shell: bash
      if: ${{ inputs.os == 'self-hosted-linux-arm' }}
    - name: cargo version
      shell: bash
      run: |
        file cargo
        cargo --version --verbose
    - name: glibc version
      shell: bash
      run: ldd --version
      if: ${{ inputs.os == 'self-hosted-linux-arm' }}
    - name: Intall cargo-all-features
      run: cargo install --version '^1.10' --force cargo-all-features
      shell: bash
      if: ${{ inputs.target != 'vxworks-ppc' }}

    # BoringSSL uses Go.
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        token: ${{ inputs.gh-token }}
        go-version: ${{ inputs.go-version }}
        check-latest: true
    - name: Export GO_VERSION
      run: |
        echo "GO_VERSION=${{ inputs.go-version }}" >> $GITHUB_ENV
        go env -w "GONOPROXY=git.spideroak-inc.com/spideroak-inc/*,*.spideroak.com,*.spideroak-ms.com"
        go env -w "GONOSUMDB=git.spideroak-inc.com/spideroak-inc/*,*.spideroak.com,*.spideroak-ms.com"
        go env -w "GOPRIVATE=git.spideroak-inc.com/spideroak-inc/*,*.spideroak.com,*.spideroak-ms.com"
      shell: bash
      if: ${{ matrix.os != 'windows-latest' && inputs.target != 'vxworks-ppc' }}
    - name: Export GO_VERSION
      run: |
        echo "GO_VERSION=${{ inputs.go-version }}" >> $env:GITHUB_ENV
        go env -w "GONOPROXY=git.spideroak-inc.com/spideroak-inc/*,*.spideroak.com,*.spideroak-ms.com"
        go env -w "GONOSUMDB=git.spideroak-inc.com/spideroak-inc/*,*.spideroak.com,*.spideroak-ms.com"
        go env -w "GOPRIVATE=git.spideroak-inc.com/spideroak-inc/*,*.spideroak.com,*.spideroak-ms.com"
      shell: pwsh
      if: ${{ matrix.os == 'windows-latest' && inputs.target != 'vxworks-ppc' }}
