name: "Test And Build Platform"

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  REV: ${{ github.run_id }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    strategy:
      matrix:
        os: [
          "ubuntu-latest",
          "macos-latest",
          "windows-latest",
          "self-hosted-linux-arm"
        ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Clean temp files
        run: rm -rf ${{ github.workspace }}/_temp
        if: ${{ matrix.os == 'self-hosted-linux-arm' }}
      - uses: ./.github/actions/setup
      - name: Unit Tests std
        run: cargo test --features std --verbose
        # TODO: test with no_std pending
        # https://github.com/rust-lang/rust/issues/48665

  lint-code:
    strategy:
      matrix:
        os: [
          "ubuntu-latest",
          "macos-latest",
          "self-hosted-linux-arm"
        ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Clean temp files
        run: rm -rf ${{ github.workspace }}/_temp
        if: ${{ matrix.os == 'self-hosted-linux-arm' }}
      - uses: ./.github/actions/setup
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Check code without `std`
        run: cargo check
      - name: Check code with `std`
        run: cargo check --features std

  build-release-std:
    strategy:
      matrix:
        os: [
          "ubuntu-latest",
          "macos-latest",
          "windows-latest",
          "self-hosted-linux-arm"
        ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Clean temp files
        run: rm -rf ${{ github.workspace }}/_temp
        if: ${{ matrix.os == 'self-hosted-linux-arm' }}
      - uses: ./.github/actions/setup
      - name: Build code
        run: cargo build --verbose --release --features std

  build-release-no-std:
    strategy:
      matrix:
        os: [
          "ubuntu-latest",
          "macos-latest",
          "self-hosted-linux-arm"
        ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Clean temp files
        run: rm -rf ${{ github.workspace }}/_temp
        if: ${{ matrix.os == 'self-hosted-linux-arm' }}
      - uses: ./.github/actions/setup
      - name: Build code
        run: cargo build --verbose --release
