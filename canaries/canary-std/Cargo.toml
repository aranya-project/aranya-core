[package]
name = "canary-std"
version = "0.1.0"
authors.workspace = true
edition.workspace = true
license.workspace = true
publish.workspace = true
rust-version.workspace = true

[dependencies]
# afc-util = { path = "../../crates/afc-util", features = ["alloc"] }
aranya-buggy = { path = "../../crates/aranya-buggy", features = ["alloc"] }
base58 = { path = "../../crates/base58", features = ["alloc"] }
# `aranya-crypto` enables `getrandom` by default.
aranya-crypto = { path = "../../crates/aranya-crypto", default-features = false, features = [
	"alloc",
	"committing-aead",
	"clone-aead",
	"proptest",
	"rand_compat",
] }
crypto-ffi = { path = "../../crates/crypto-ffi", features = ["alloc"] }
device-ffi = { path = "../../crates/device-ffi", features = ["alloc"] }
envelope-ffi = { path = "../../crates/envelope-ffi", features = ["alloc"] }
idam-ffi = { path = "../../crates/idam-ffi", features = ["alloc"] }
perspective-ffi = { path = "../../crates/perspective-ffi", features = ["alloc"] }
policy-ast = { path = "../../crates/policy-ast" }
policy-module = { path = "../../crates/policy-module" }
policy-vm = { path = "../../crates/policy-vm", features = ["derive"] }
# These features must also be no-std.
runtime = { path = "../../crates/runtime", features = ["testing"] }
trouble = { path = "../../crates/trouble" }
